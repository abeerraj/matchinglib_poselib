#Connect to instance
ssh -i keyfile address

#Install docker
sudo apt-get remove docker docker-engine docker.io containerd runc
sudo apt-get update
sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo apt-key fingerprint 0EBFCD88
sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io
sudo docker run hello-world

#Show devices
lsblk

#Check if file system exists on device (output data: no file system)
sudo file -s /dev/name_of_device

#Optional, install package to be able to perform next operation
sudo apt-get install xfsprogs

#Create file system
sudo mkfs -t xfs /dev/name_of_device

#Create a mount point
sudo mkdir /data
sudo mount /dev/name_of_device /data

#For automatically mounting see https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-using-volumes.html
sudo cp /etc/fstab /etc/fstab.orig
sudo lsblk -o +UUID
sudo nano /etc/fstab

#Enter: UUID=UUID_value_from_lsblk  /data  xfs  defaults,nofail  0  2

sudo umount /data
sudo mount -a

scp -i keyfile /home/maierj/work/autocalib_test_package/initial_setup.sh dest:/data

cd /data
./initial_setup.sh
cd autocalib_test_package
./run_docker_base.sh

cd py_test_scripts
python main.py --nrCPUs -72 --zip_res_folder

#For copying results back
scp -i keyfile source:/data/results_000.zip /home/maierj/work/results
